{"version":3,"sources":["webpack:///./node_modules/fast-memoize/src/index.js","webpack:///./node_modules/ramda/es/internal/_objectAssign.js","webpack:///./node_modules/ramda/es/mergeAll.js","webpack:///./src/lib/fragments/Speck.react.js"],"names":["monadic","fn","cache","serializer","arg","value","cacheKey","computedValue","get","call","this","set","variadic","args","Array","prototype","slice","arguments","apply","assemble","context","strategy","serialize","bind","strategyDefault","options","length","create","serializerDefault","JSON","stringify","ObjectWithoutPrototypeCache","Object","has","key","cacheDefault","module","exports","strategies","target","TypeError","output","idx","source","nextKey","_has","_curry1","list","concat","generateSystem","memoize","data","system","speckSystem","i","a","addAtom","symbol","x","y","z","center","calculateBonds","viewClone","view","mergeAll","rotation","Float32Array","translation","viewAssign","view1","view2","assign","Speck","props","state","renderer","eventListenDestructor","refreshView","propsReconcileTimeout","speckView","setProps","setCanvasRef","e","canvas","setContainerRef","container","loop","loadStructure","propsReconcile","propsReconcileSchedule","scrollZoom","SpeckRenderer","setState","speckInteractions","getRotation","setRotation","rotationObj","getTranslation","setTranslation","translationObj","getZoom","zoom","setZoom","zoomVal","prevProps","presetView","viewInternal","needsUpdate","speckPresetViews","view1Str","viewHasEqual","equals","clearTimeout","setTimeout","setSystem","setResolution","resolution","aoRes","reset","render","requestAnimationFrame","id","divStyle","height","width","ref","style","Component","defaultProps","propTypes"],"mappings":"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","file":"async-speck.js","sourcesContent":["//\n// Main\n//\n\nfunction memoize (fn, options) {\n  var cache = options && options.cache\n    ? options.cache\n    : cacheDefault\n\n  var serializer = options && options.serializer\n    ? options.serializer\n    : serializerDefault\n\n  var strategy = options && options.strategy\n    ? options.strategy\n    : strategyDefault\n\n  return strategy(fn, {\n    cache: cache,\n    serializer: serializer\n  })\n}\n\n//\n// Strategy\n//\n\nfunction isPrimitive (value) {\n  return value == null || typeof value === 'number' || typeof value === 'boolean' // || typeof value === \"string\" 'unsafe' primitive for our needs\n}\n\nfunction monadic (fn, cache, serializer, arg) {\n  var cacheKey = isPrimitive(arg) ? arg : serializer(arg)\n\n  var computedValue = cache.get(cacheKey)\n  if (typeof computedValue === 'undefined') {\n    computedValue = fn.call(this, arg)\n    cache.set(cacheKey, computedValue)\n  }\n\n  return computedValue\n}\n\nfunction variadic (fn, cache, serializer) {\n  var args = Array.prototype.slice.call(arguments, 3)\n  var cacheKey = serializer(args)\n\n  var computedValue = cache.get(cacheKey)\n  if (typeof computedValue === 'undefined') {\n    computedValue = fn.apply(this, args)\n    cache.set(cacheKey, computedValue)\n  }\n\n  return computedValue\n}\n\nfunction assemble (fn, context, strategy, cache, serialize) {\n  return strategy.bind(\n    context,\n    fn,\n    cache,\n    serialize\n  )\n}\n\nfunction strategyDefault (fn, options) {\n  var strategy = fn.length === 1 ? monadic : variadic\n\n  return assemble(\n    fn,\n    this,\n    strategy,\n    options.cache.create(),\n    options.serializer\n  )\n}\n\nfunction strategyVariadic (fn, options) {\n  var strategy = variadic\n\n  return assemble(\n    fn,\n    this,\n    strategy,\n    options.cache.create(),\n    options.serializer\n  )\n}\n\nfunction strategyMonadic (fn, options) {\n  var strategy = monadic\n\n  return assemble(\n    fn,\n    this,\n    strategy,\n    options.cache.create(),\n    options.serializer\n  )\n}\n\n//\n// Serializer\n//\n\nfunction serializerDefault () {\n  return JSON.stringify(arguments)\n}\n\n//\n// Cache\n//\n\nfunction ObjectWithoutPrototypeCache () {\n  this.cache = Object.create(null)\n}\n\nObjectWithoutPrototypeCache.prototype.has = function (key) {\n  return (key in this.cache)\n}\n\nObjectWithoutPrototypeCache.prototype.get = function (key) {\n  return this.cache[key]\n}\n\nObjectWithoutPrototypeCache.prototype.set = function (key, value) {\n  this.cache[key] = value\n}\n\nvar cacheDefault = {\n  create: function create () {\n    return new ObjectWithoutPrototypeCache()\n  }\n}\n\n//\n// API\n//\n\nmodule.exports = memoize\nmodule.exports.strategies = {\n  variadic: strategyVariadic,\n  monadic: strategyMonadic\n}\n","import _has from './_has.js';\n\n// Based on https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\nfunction _objectAssign(target) {\n  if (target == null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  var output = Object(target);\n  var idx = 1;\n  var length = arguments.length;\n  while (idx < length) {\n    var source = arguments[idx];\n    if (source != null) {\n      for (var nextKey in source) {\n        if (_has(nextKey, source)) {\n          output[nextKey] = source[nextKey];\n        }\n      }\n    }\n    idx += 1;\n  }\n  return output;\n}\n\nexport default typeof Object.assign === 'function' ? Object.assign : _objectAssign;","import _objectAssign from './internal/_objectAssign.js';\nimport _curry1 from './internal/_curry1.js';\n\n/**\n * Merges a list of objects together into one object.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig [{k: v}] -> {k: v}\n * @param {Array} list An array of objects\n * @return {Object} A merged object.\n * @see R.reduce\n * @example\n *\n *      R.mergeAll([{foo:1},{bar:2},{baz:3}]); //=> {foo:1,bar:2,baz:3}\n *      R.mergeAll([{foo:1},{foo:2},{bar:2}]); //=> {foo:2,bar:2}\n * @symb R.mergeAll([{ x: 1 }, { y: 2 }, { z: 3 }]) = { x: 1, y: 2, z: 3 }\n */\nvar mergeAll = /*#__PURE__*/_curry1(function mergeAll(list) {\n  return _objectAssign.apply(null, [{}].concat(list));\n});\nexport default mergeAll;","import React, {Component} from 'react';\nimport {mergeAll, equals} from 'ramda';\nimport memoize from 'fast-memoize';\n\nimport {\n    speckRenderer as SpeckRenderer,\n    speckSystem,\n    speckView,\n    speckInteractions,\n    speckPresetViews,\n} from 'speck';\n\nimport {propTypes, defaultProps} from '../components/Speck.react';\n\n/**\n * Define private functions and variables used in the Speck component.\n **/\n\n// Time (in milliseconds) idle before props reconciliation with external\n// view is done\nconst PROPS_RECONCILE_DEBOUNCE_TIME = 500;\n\nconst generateSystem = memoize(data => {\n    const system = speckSystem.new();\n\n    for (let i = 0; i < data.length; i++) {\n        // get the coordinate data\n        const a = data[i];\n        // add to the system\n        speckSystem.addAtom(system, a.symbol, a.x, a.y, a.z);\n    }\n\n    speckSystem.center(system);\n    speckSystem.calculateBonds(system);\n    return system;\n});\n\nconst viewClone = view =>\n    mergeAll([\n        view,\n        {\n            rotation: new Float32Array(view.rotation),\n            translation: mergeAll([view.translation]),\n        },\n    ]);\n\nconst viewAssign = (view1 = {}, view2 = {}) => Object.assign(view1, view2);\n\nconst viewHasEqual = function(view1) {\n    const view1Str = JSON.stringify(view1);\n    for (let i = 1; i < arguments.length; i++) {\n        if (view1Str === JSON.stringify(arguments[i])) {\n            return true;\n        }\n    }\n    return false;\n};\n\nexport default class Speck extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            renderer: null,\n        };\n\n        this.eventListenDestructor = () => {\n            /* no-op */\n        };\n        this.refreshView = false;\n        this.propsReconcileTimeout = null;\n\n        this.view = viewAssign(speckView.new(), props.view);\n        this.props.setProps({\n            view: viewClone(this.view),\n        });\n\n        // setting refs in this way to allow for easier updating to\n        // react 16\n        this.setCanvasRef = e => {\n            this.canvas = e;\n        };\n        this.setContainerRef = e => {\n            this.container = e;\n        };\n\n        this.loop = this.loop.bind(this);\n        this.loadStructure = this.loadStructure.bind(this);\n        this.propsReconcile = this.propsReconcile.bind(this);\n        this.propsReconcileSchedule = this.propsReconcileSchedule.bind(this);\n    }\n\n    componentDidMount() {\n        const {scrollZoom} = this.props;\n        const {canvas, container} = this;\n        const resolution = 200;\n        const aoResolution = 300;\n        const renderer = new SpeckRenderer(canvas, resolution, aoResolution);\n\n        this.setState(\n            {\n                renderer,\n            },\n            this.loadStructure\n        );\n\n        // add event listeners\n        this.eventListenDestructor = speckInteractions({\n            scrollZoom,\n            container,\n\n            getRotation: () => this.view.rotation,\n            setRotation: rotationObj => {\n                this.view = viewAssign(this.view, {rotation: rotationObj});\n                this.propsReconcileSchedule();\n            },\n\n            getTranslation: () => this.view.translation,\n            setTranslation: translationObj => {\n                this.view = viewAssign(this.view, {\n                    translation: translationObj,\n                });\n                this.propsReconcileSchedule();\n            },\n\n            getZoom: () => this.view.zoom,\n            setZoom: zoomVal => {\n                this.view = viewAssign(this.view, {zoom: zoomVal});\n                this.propsReconcileSchedule();\n            },\n\n            refreshView: () => (this.refreshView = true),\n        });\n\n        this.loop();\n    }\n\n    componentDidUpdate(prevProps) {\n        const {data, view, presetView} = this.props;\n        const {renderer} = this.state;\n\n        let viewInternal = this.view;\n        let needsUpdate = false;\n\n        // apply applicable preset parameters if preset has changed\n        if (prevProps.presetView !== presetView) {\n            viewInternal = viewAssign(\n                viewInternal,\n                speckPresetViews[presetView]\n            );\n            this.propsReconcileSchedule();\n            needsUpdate = true;\n        }\n\n        // apply the user-supplied view parameters\n        if (!viewHasEqual(view, prevProps.view, viewInternal)) {\n            viewInternal = viewAssign(viewInternal, view);\n            needsUpdate = true;\n        }\n\n        // check for changes to data\n        if (!equals(data, prevProps.data)) {\n            needsUpdate = true;\n        }\n\n        // perform update\n        if (needsUpdate) {\n            this.view = viewInternal;\n\n            if (renderer) {\n                this.loadStructure();\n            }\n        }\n    }\n\n    componentWillUnmount() {\n        // set this.state.renderer = null to ensure all refs to renderer are\n        // destroyed so garbage collector will clean up webgl contexts\n        // eslint-disable-next-line react/no-direct-mutation-state\n        this.state.renderer = null;\n        this.eventListenDestructor();\n        this.props.setProps({\n            view: this.view,\n        });\n    }\n\n    propsReconcile() {\n        if (!equals(this.view, this.props.view)) {\n            this.props.setProps({view: viewClone(this.view)});\n        }\n    }\n\n    // Schedule the function \"propsReconcile\" to run after the amount of time\n    // specified in PROPS_RECONCILE_DEBOUNCE_TIME. If a run has been scheduled\n    // previously, cancel it.\n    propsReconcileSchedule() {\n        clearTimeout(this.propsReconcileTimeout);\n        this.propsReconcileTimeout = setTimeout(\n            this.propsReconcile,\n            PROPS_RECONCILE_DEBOUNCE_TIME\n        );\n    }\n\n    loadStructure() {\n        const {data} = this.props;\n\n        // avoid trying to load an empty system\n        if (data.length === 0) {\n            return;\n        }\n\n        const {renderer} = this.state;\n        const {view} = this;\n        const system = generateSystem(data);\n\n        renderer.setSystem(system, view);\n\n        // update the resolution\n        renderer.setResolution(view.resolution, view.aoRes);\n\n        this.refreshView = true;\n    }\n\n    loop() {\n        if (this.state.renderer && this.view) {\n            if (this.refreshView) {\n                this.state.renderer.reset();\n                this.refreshView = false;\n            }\n            this.state.renderer.render(this.view);\n        }\n        requestAnimationFrame(this.loop);\n    }\n\n    render() {\n        const {id} = this.props;\n        const {view} = this;\n\n        const divStyle = {\n            height: view.resolution,\n            width: view.resolution,\n        };\n\n        return (\n            <div id={id} ref={this.setContainerRef} style={divStyle}>\n                <canvas\n                    ref={this.setCanvasRef}\n                    width={view.resolution}\n                    height={view.resolution}\n                />\n            </div>\n        );\n    }\n}\n\nSpeck.defaultProps = defaultProps;\nSpeck.propTypes = propTypes;\n"],"sourceRoot":""}