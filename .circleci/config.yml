version: 2

jobs:
    node:
        docker:
            - image: circleci/python:3.7.5-stretch-node

        steps:
            - checkout
            - run:
                name: Check current version of node
                command: node -v
            - restore_cache:
                key: deps1-{{ .Branch }}-{{ checksum "package-lock.json" }}

            - run:
                name: Install package.json
                command: npm ci

            - save_cache:
                key: deps1-{{ .Branch }}-{{ checksum "package-lock.json" }}
                paths:
                    - node_modules

            - run:
                name: Run eslint
                command: ./node_modules/.bin/eslint src
                when: always

            - run:
                name: Install Dash for package build and build package
                command: |
                    python -m venv venv
                    . venv/bin/activate
                    git clone --depth 1 https://github.com/plotly/dash.git dash-main
                    cd dash-main && pip install -e .[dev,testing]
                    cd dash-renderer && npm run build && pip install -e . && cd ../..
                    npm run build

            - run:
                name: Run unit tests
                command: |
                    python -m venv venv
                    . venv/bin/activate
                    pip install dash_bio_utils
                    cd tests/unit
                    python unit_test_data_setup.py
                    cd ../../
                    npm run test

    python-3.6: &test-template
        docker:
            - image: circleci/python:3.6.9-stretch-node-browsers

        environment:
            PERCY_ENABLED: True

        steps:
            - checkout
            - run: echo $PYVERSION > ver.txt

            - restore_cache:
                key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}-{{ checksum "tests/requirements.txt" }}-{{ checksum "ver.txt" }}-{{ checksum ".circleci/config.yml" }}

            - run:
                name: Create virtualenv
                command: |
                    python3 -m venv venv

            - run:
                name: Install requirements
                command: |
                    . venv/bin/activate
                    pip install --progress-bar off -r tests/requirements.txt --quiet

            - save_cache:
                key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}-{{ checksum "tests/requirements.txt" }}-{{ checksum "ver.txt" }}-{{ checksum ".circleci/config.yml" }}
                paths:
                    - venv

            - run:
                name: Install Dash
                command: |
                    . venv/bin/activate
                    git clone --depth 1 https://github.com/plotly/dash.git dash-main
                    cd dash-main && pip install -e .[dev,testing]
                    cd dash-renderer && npm run build && pip install -e . && cd ../..

            - run:
                name: Run pylint
                command: |
                    . venv/bin/activate
                    pylint tests/ dash_bio/component_factory/
                when: always

            - run:
                name: Run flake8
                command: |
                    . venv/bin/activate
                    flake8 --max-line-length=100 tests/ dash_bio/component_factory/
                when: always

            - run:
                name: Run integration tests
                command: |
                    . venv/bin/activate
                    npm ci
                    npm run build
                    python setup.py sdist
                    cd dist
                    find . -name "*.gz" | xargs pip install --progress-bar off --no-cache-dir --ignore-installed --quiet && cd ..
                    pytest tests/integration

            - run:
                name: Run unit tests
                command: |
                    python -m venv venv
                    . venv/bin/activate
                    pytest tests/unit

    python-3.7:
        <<: *test-template
        docker:
            - image: circleci/python:3.7.5-stretch-node-browsers

        environment:
            PERCY_ENABLED: True

workflows:
  version: 2
  build:
    jobs:
      - python-3.6
      - python-3.7
      - node
