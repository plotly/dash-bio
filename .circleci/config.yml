version: 2

jobs:
    node:
        docker:
            - image: circleci/python:3.7-stretch-node

        steps:
            - checkout
            - run:
                name: Update Node.js and npm
                command: |
                  curl -sSL "https://nodejs.org/dist/v11.10.1/node-v11.10.1-linux-x64.tar.xz" | sudo tar --strip-components=2 -xJ -C /usr/local/bin/ node-v11.10.1-linux-x64/bin/node
                  curl https://www.npmjs.com/install.sh | sudo bash
            - run:
                name: Check current version of node
                command: node -v
            - restore_cache:
                key: deps1-{{ .Branch }}-{{ checksum "package.json" }}

            - run:
                name: Install package.json
                command: npm ci

            - save_cache:
                key: deps1-{{ .Branch }}-{{ checksum "package.json" }}
                paths:
                    - node_modules

            - run:
                name: Run eslint
                command: ./node_modules/.bin/eslint src
                when: always

            - run:
                name: Install Dash for package build and build package
                command: |
                    python -m venv venv
                    . venv/bin/activate
                    pip install --upgrade pip
                    pip install dash>=1.6.1
                    npm run build

            - run:
                name: Run unit tests
                command: |
                    python -m venv venv
                    . venv/bin/activate
                    pip install --upgrade pip
                    pip install dash_bio_utils
                    cd tests/unit
                    python unit_test_data_setup.py
                    cd ../../
                    npm run test

    python-3.6: &test-template
        docker:
            - image: circleci/python:3.6-stretch-node-browsers

        environment:
            PERCY_ENABLED: True

        steps:
            - checkout
            - run: echo $PYVERSION > ver.txt

            - restore_cache:
                key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}-{{ checksum "tests/requirements.txt" }}-{{ checksum "ver.txt" }}

            - run:
                name: Create virtualenv
                command: |
                    python3 -m venv venv

            - run:
                name: Install requirements
                command: |
                    . venv/bin/activate
                    pip install --upgrade pip
                    pip install -r tests/requirements.txt --quiet
                    pip install dash[testing]

            - save_cache:
                key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}-{{ checksum "tests/requirements.txt" }}-{{ checksum "ver.txt" }}
                paths:
                    - venv

            - run:
                name: Run pylint
                command: |
                    . venv/bin/activate
                    pylint tests/ dash_bio/component_factory/
                when: always

            - run:
                name: Run flake8
                command: |
                    . venv/bin/activate
                    flake8 --max-line-length=100 tests/ dash_bio/component_factory/
                when: always

            - run:
                name: Run integration tests
                command: |
                    . venv/bin/activate
                    pip install --upgrade pip
                    pip install -r tests/requirements.txt
                    npm ci
                    npm run build
                    pip install -e .
                    pytest tests/integration

    python-3.7:
        <<: *test-template
        docker:
            - image: circleci/python:3.7-stretch-node-browsers

        environment:
            PERCY_ENABLED: True

    deploy_to_gallery:
        docker:
            - image: circleci/python:3.7-stretch-node-browsers
        working_directory: ~/dash-bio
        steps:
          - checkout
          - run:
              name: Create helper-script
              command: printf '#!/bin/bash\necho username=$GALLERY_DEPLOY_USERNAME\necho password=$GALLERY_DEPLOY_PASSWORD' >> /home/circleci/helper-script.sh
          - run:
              name: Set up git config
              command: |
                git config credential.helper "/bin/bash /home/circleci/helper-script.sh"
                git config --global user.email '<>'
                git config --global user.name "Circle Auto-deployment"
          - run:
              name: Deploy
              command: |
                while IFS='' read -r line || [[ -n "$line" ]]; do
                    git remote add $line https://dash-gallery.plotly.host/GIT/$line
                    python tests/dashbio_demos/deployment/generate_procfile.py $line
                    echo $PLOTLY_GA_CODE > assets/plotly_ga.js
                    git add Procfile assets/plotly_ga.js
                    git commit -m "Deployed commit: $CIRCLE_SHA1"
                    git push --force $line master || echo "Deploy failed. Continuing..."
                    git reset --hard origin/master
                done < "tests/dashbio_demos/deployment/app_remotes.txt"


workflows:
    version: 2
    build:
        jobs:
            - python-3.6
            - python-3.7
            - node
            - deploy_to_gallery:
                filters:
                  branches:
                    only:
                    - master
