{"version":3,"file":"async-speck.js","mappings":"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","sources":["webpack:///./node_modules/ramda/es/internal/_objectAssign.js","webpack:///./node_modules/ramda/es/mergeAll.js","webpack:///./src/lib/fragments/Speck.react.js","webpack:///./node_modules/fast-memoize/src/index.js"],"sourcesContent":["import _has from './_has.js';\n\n// Based on https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\nfunction _objectAssign(target) {\n  if (target == null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  var output = Object(target);\n  var idx = 1;\n  var length = arguments.length;\n  while (idx < length) {\n    var source = arguments[idx];\n    if (source != null) {\n      for (var nextKey in source) {\n        if (_has(nextKey, source)) {\n          output[nextKey] = source[nextKey];\n        }\n      }\n    }\n    idx += 1;\n  }\n  return output;\n}\n\nexport default typeof Object.assign === 'function' ? Object.assign : _objectAssign;","import _objectAssign from './internal/_objectAssign.js';\nimport _curry1 from './internal/_curry1.js';\n\n/**\n * Merges a list of objects together into one object.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig [{k: v}] -> {k: v}\n * @param {Array} list An array of objects\n * @return {Object} A merged object.\n * @see R.reduce\n * @example\n *\n *      R.mergeAll([{foo:1},{bar:2},{baz:3}]); //=> {foo:1,bar:2,baz:3}\n *      R.mergeAll([{foo:1},{foo:2},{bar:2}]); //=> {foo:2,bar:2}\n * @symb R.mergeAll([{ x: 1 }, { y: 2 }, { z: 3 }]) = { x: 1, y: 2, z: 3 }\n */\nvar mergeAll = /*#__PURE__*/_curry1(function mergeAll(list) {\n  return _objectAssign.apply(null, [{}].concat(list));\n});\nexport default mergeAll;","import React, {Component} from 'react';\nimport {mergeAll, equals} from 'ramda';\nimport memoize from 'fast-memoize';\n\nimport {\n    speckRenderer as SpeckRenderer,\n    speckSystem,\n    speckView,\n    speckInteractions,\n    speckPresetViews,\n    speckElements,\n} from 'speck';\n\nimport {propTypes, defaultProps} from '../components/Speck.react';\n\n/**\n * Define private functions and variables used in the Speck component.\n **/\n\n// Time (in milliseconds) idle before props reconciliation with external\n// view is done\nconst PROPS_RECONCILE_DEBOUNCE_TIME = 500;\n\nconst MAX_COLOR_INDEX = 255;\n\nconst generateSystem = memoize((data) => {\n    const system = speckSystem.new();\n\n    for (let i = 0; i < data.length; i++) {\n        // get the coordinate data\n        const a = data[i];\n        // add to the system\n        speckSystem.addAtom(system, a.symbol, a.x, a.y, a.z);\n    }\n\n    speckSystem.center(system);\n    speckSystem.calculateBonds(system);\n    return system;\n});\n\nconst viewClone = (view) =>\n    mergeAll([\n        view,\n        {\n            rotation: new Float32Array(view.rotation),\n            translation: mergeAll([view.translation]),\n        },\n    ]);\n\nconst viewAssign = (view1 = {}, view2 = {}) => Object.assign(view1, view2);\n\nconst viewHasEqual = function (view1) {\n    const view1Str = JSON.stringify(view1);\n    for (let i = 1; i < arguments.length; i++) {\n        if (view1Str === JSON.stringify(arguments[i])) {\n            return true;\n        }\n    }\n    return false;\n};\n\nfunction resizeCanvas(canvas) {\n    // Make the canvas visually fill the parent div of the plot\n    canvas.style.width = '100%';\n    canvas.style.height = '100%';\n    // Set the internal size to match the parent div\n    canvas.width = canvas.offsetWidth;\n    canvas.height = canvas.offsetHeight;\n}\n\nexport default class Speck extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            renderer: null,\n        };\n\n        this.eventListenDestructor = () => {\n            /* no-op */\n        };\n        this.refreshView = false;\n        this.propsReconcileTimeout = null;\n\n        this.view = viewAssign(speckView.new(), props.view);\n        this.props.setProps({\n            view: viewClone(this.view),\n        });\n\n        // setting refs in this way to allow for easier updating to\n        // react 16\n        this.setCanvasRef = (e) => {\n            this.canvas = e;\n        };\n        this.setContainerRef = (e) => {\n            this.container = e;\n        };\n\n        this.loop = this.loop.bind(this);\n        this.loadStructure = this.loadStructure.bind(this);\n        this.propsReconcile = this.propsReconcile.bind(this);\n        this.propsReconcileSchedule = this.propsReconcileSchedule.bind(this);\n    }\n\n    componentDidMount() {\n        const {scrollZoom} = this.props;\n        const {canvas, container} = this;\n        const resolution = 200;\n        const aoResolution = 300;\n        const renderer = new SpeckRenderer(canvas, resolution, aoResolution);\n\n        this.setState(\n            {\n                renderer,\n            },\n            this.loadStructure\n        );\n\n        // add event listeners\n        this.eventListenDestructor = speckInteractions({\n            scrollZoom,\n            container,\n\n            getRotation: () => this.view.rotation,\n            setRotation: (rotationObj) => {\n                this.view = viewAssign(this.view, {rotation: rotationObj});\n                this.propsReconcileSchedule();\n            },\n\n            getTranslation: () => this.view.translation,\n            setTranslation: (translationObj) => {\n                this.view = viewAssign(this.view, {\n                    translation: translationObj,\n                });\n                this.propsReconcileSchedule();\n            },\n\n            getZoom: () => this.view.zoom,\n            setZoom: (zoomVal) => {\n                this.view = viewAssign(this.view, {zoom: zoomVal});\n                this.propsReconcileSchedule();\n            },\n\n            refreshView: () => (this.refreshView = true),\n        });\n        resizeCanvas(canvas);\n        this.loop();\n    }\n\n    componentDidUpdate(prevProps) {\n        const {data, view, presetView, style} = this.props;\n        const {renderer} = this.state;\n\n        let viewInternal = this.view;\n        let needsUpdate = false;\n\n        // apply applicable preset parameters if preset has changed\n        if (prevProps.presetView !== presetView) {\n            viewInternal = viewAssign(\n                viewInternal,\n                speckPresetViews[presetView]\n            );\n            this.propsReconcileSchedule();\n            needsUpdate = true;\n        }\n\n        // apply the user-supplied view parameters\n        if (!viewHasEqual(view, prevProps.view, viewInternal)) {\n            viewInternal = viewAssign(viewInternal, view);\n            needsUpdate = true;\n        }\n\n        // check for changes to data\n        if (!equals(data, prevProps.data)) {\n            needsUpdate = true;\n        }\n\n        // check for changes to style\n        if (!equals(style, prevProps.style)) {\n            needsUpdate = true;\n        }\n\n        // perform update\n        if (needsUpdate) {\n            this.view = viewInternal;\n\n            if (renderer) {\n                this.loadStructure();\n            }\n        }\n    }\n\n    componentWillUnmount() {\n        // set this.state.renderer = null to ensure all refs to renderer are\n        // destroyed so garbage collector will clean up webgl contexts\n        // eslint-disable-next-line react/no-direct-mutation-state\n        this.state.renderer = null;\n        this.eventListenDestructor();\n        this.props.setProps({\n            view: this.view,\n        });\n    }\n\n    propsReconcile() {\n        if (!equals(this.view, this.props.view)) {\n            this.props.setProps({view: viewClone(this.view)});\n        }\n    }\n\n    // Schedule the function \"propsReconcile\" to run after the amount of time\n    // specified in PROPS_RECONCILE_DEBOUNCE_TIME. If a run has been scheduled\n    // previously, cancel it.\n    propsReconcileSchedule() {\n        clearTimeout(this.propsReconcileTimeout);\n        this.propsReconcileTimeout = setTimeout(\n            this.propsReconcile,\n            PROPS_RECONCILE_DEBOUNCE_TIME\n        );\n    }\n\n    loadStructure() {\n        const {data} = this.props;\n        const {canvas} = this;\n\n        // avoid trying to load an empty system\n        if (data.length === 0) {\n            return;\n        }\n\n        const {renderer} = this.state;\n        const {view} = this;\n        const system = generateSystem(data);\n\n        renderer.setSystem(system, view);\n\n        // update the resolution\n        renderer.setResolution(view.resolution, view.aoRes);\n\n        this.refreshView = true;\n\n        // resize canvas to fit container\n        resizeCanvas(canvas);\n    }\n\n    loop() {\n        if (this.state.renderer && this.view) {\n            if (this.refreshView) {\n                this.state.renderer.reset();\n                this.refreshView = false;\n            }\n            this.state.renderer.render(this.view);\n        }\n        requestAnimationFrame(this.loop);\n    }\n\n    colorLegend() {\n        const displayedSymbols = Array.from(\n            new Set(this.props.data.map(({symbol}) => symbol))\n        );\n        const displayedElements = displayedSymbols.map(\n            (symbol) => speckElements[symbol]\n        );\n\n        const containerStyle = {\n            backgroundColor: 'white',\n            width: '60px',\n            height: 'fit-content',\n            padding: '10px',\n            position: 'absolute',\n            right: '-80px',\n            top: 0,\n        };\n\n        return (\n            <div style={containerStyle} id=\"speck-color-legend\">\n                {displayedElements.map((element) => {\n                    const colorBlockStyle = {\n                        backgroundColor: this.colorToRgb(element.color),\n                        width: '16px',\n                        height: '16px',\n                        display: 'inline-block',\n                        borderRadius: '50%',\n                        marginRight: '20px',\n                        border: '0.25px solid black',\n                    };\n\n                    const colorContainerStyle = {\n                        display: 'flex',\n                        alignItems: 'center',\n                    };\n\n                    return (\n                        <p style={colorContainerStyle} key={element.symbol}>\n                            <span style={colorBlockStyle} />\n                            <span>{element.symbol}</span>\n                        </p>\n                    );\n                })}\n            </div>\n        );\n    }\n\n    colorToRgb(colors) {\n        const newColors = colors\n            .map((color) => color * MAX_COLOR_INDEX)\n            .map((color) => this.lightenColor(color))\n            .join(', ');\n\n        return `rgb(${newColors})`;\n    }\n\n    // In WebGL we mix original colors with white to get more lighter colors\n    lightenColor(colorChannel) {\n        return colorChannel * 0.5 + MAX_COLOR_INDEX * 0.5;\n    }\n\n    render() {\n        const {id, loading_state, showLegend, style} = this.props;\n\n        return (\n            <div\n                id={id}\n                ref={this.setContainerRef}\n                style={style}\n                data-dash-is-loading={\n                    (loading_state && loading_state.is_loading) || undefined\n                }\n            >\n                <canvas ref={this.setCanvasRef} />\n                {showLegend && this.colorLegend()}\n            </div>\n        );\n    }\n}\n\nSpeck.defaultProps = defaultProps;\nSpeck.propTypes = propTypes;\n","//\n// Main\n//\n\nfunction memoize (fn, options) {\n  var cache = options && options.cache\n    ? options.cache\n    : cacheDefault\n\n  var serializer = options && options.serializer\n    ? options.serializer\n    : serializerDefault\n\n  var strategy = options && options.strategy\n    ? options.strategy\n    : strategyDefault\n\n  return strategy(fn, {\n    cache: cache,\n    serializer: serializer\n  })\n}\n\n//\n// Strategy\n//\n\nfunction isPrimitive (value) {\n  return value == null || typeof value === 'number' || typeof value === 'boolean' // || typeof value === \"string\" 'unsafe' primitive for our needs\n}\n\nfunction monadic (fn, cache, serializer, arg) {\n  var cacheKey = isPrimitive(arg) ? arg : serializer(arg)\n\n  var computedValue = cache.get(cacheKey)\n  if (typeof computedValue === 'undefined') {\n    computedValue = fn.call(this, arg)\n    cache.set(cacheKey, computedValue)\n  }\n\n  return computedValue\n}\n\nfunction variadic (fn, cache, serializer) {\n  var args = Array.prototype.slice.call(arguments, 3)\n  var cacheKey = serializer(args)\n\n  var computedValue = cache.get(cacheKey)\n  if (typeof computedValue === 'undefined') {\n    computedValue = fn.apply(this, args)\n    cache.set(cacheKey, computedValue)\n  }\n\n  return computedValue\n}\n\nfunction assemble (fn, context, strategy, cache, serialize) {\n  return strategy.bind(\n    context,\n    fn,\n    cache,\n    serialize\n  )\n}\n\nfunction strategyDefault (fn, options) {\n  var strategy = fn.length === 1 ? monadic : variadic\n\n  return assemble(\n    fn,\n    this,\n    strategy,\n    options.cache.create(),\n    options.serializer\n  )\n}\n\nfunction strategyVariadic (fn, options) {\n  var strategy = variadic\n\n  return assemble(\n    fn,\n    this,\n    strategy,\n    options.cache.create(),\n    options.serializer\n  )\n}\n\nfunction strategyMonadic (fn, options) {\n  var strategy = monadic\n\n  return assemble(\n    fn,\n    this,\n    strategy,\n    options.cache.create(),\n    options.serializer\n  )\n}\n\n//\n// Serializer\n//\n\nfunction serializerDefault () {\n  return JSON.stringify(arguments)\n}\n\n//\n// Cache\n//\n\nfunction ObjectWithoutPrototypeCache () {\n  this.cache = Object.create(null)\n}\n\nObjectWithoutPrototypeCache.prototype.has = function (key) {\n  return (key in this.cache)\n}\n\nObjectWithoutPrototypeCache.prototype.get = function (key) {\n  return this.cache[key]\n}\n\nObjectWithoutPrototypeCache.prototype.set = function (key, value) {\n  this.cache[key] = value\n}\n\nvar cacheDefault = {\n  create: function create () {\n    return new ObjectWithoutPrototypeCache()\n  }\n}\n\n//\n// API\n//\n\nmodule.exports = memoize\nmodule.exports.strategies = {\n  variadic: strategyVariadic,\n  monadic: strategyMonadic\n}\n"],"names":["Object","assign","target","TypeError","output","idx","length","arguments","source","nextKey","_has","list","concat","generateSystem","memoize","data","system","speckSystem","i","a","symbol","x","y","z","viewClone","view","mergeAll","rotation","Float32Array","translation","viewAssign","view1","view2","resizeCanvas","canvas","style","width","height","offsetWidth","offsetHeight","Speck","props","state","renderer","eventListenDestructor","refreshView","propsReconcileTimeout","speckView","setProps","setCanvasRef","e","setContainerRef","container","loop","bind","loadStructure","propsReconcile","propsReconcileSchedule","scrollZoom","this","SpeckRenderer","setState","speckInteractions","getRotation","setRotation","rotationObj","getTranslation","setTranslation","translationObj","getZoom","zoom","setZoom","zoomVal","prevProps","presetView","viewInternal","needsUpdate","speckPresetViews","view1Str","JSON","stringify","viewHasEqual","equals","clearTimeout","setTimeout","setSystem","setResolution","resolution","aoRes","reset","render","requestAnimationFrame","displayedElements","Array","from","Set","map","speckElements","backgroundColor","padding","position","right","top","id","element","colorBlockStyle","colorToRgb","color","display","borderRadius","marginRight","border","alignItems","key","colors","newColors","lightenColor","join","colorChannel","MAX_COLOR_INDEX","loading_state","showLegend","ref","is_loading","undefined","colorLegend","Component","defaultProps","propTypes","monadic","fn","cache","serializer","arg","value","cacheKey","computedValue","get","call","set","variadic","args","prototype","slice","apply","assemble","context","strategy","serialize","strategyDefault","options","create","serializerDefault","ObjectWithoutPrototypeCache","has","cacheDefault","module","exports","strategies"],"sourceRoot":""}