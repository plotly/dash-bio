{"version":3,"sources":["webpack:///./node_modules/fast-memoize/src/index.js","webpack:///./node_modules/ramda/es/internal/_objectAssign.js","webpack:///./node_modules/ramda/es/mergeAll.js","webpack:///./src/lib/fragments/Speck.react.js"],"names":["monadic","fn","cache","serializer","arg","value","cacheKey","computedValue","get","call","this","set","variadic","args","Array","prototype","slice","arguments","apply","assemble","context","strategy","serialize","bind","strategyDefault","options","length","create","serializerDefault","JSON","stringify","ObjectWithoutPrototypeCache","Object","has","key","cacheDefault","module","exports","strategies","target","TypeError","output","idx","source","nextKey","_has","_curry1","list","concat","generateSystem","memoize","data","system","speckSystem","i","a","addAtom","symbol","x","y","z","center","calculateBonds","viewClone","view","mergeAll","rotation","Float32Array","translation","viewAssign","view1","view2","assign","resizeCanvas","canvas","style","width","height","offsetWidth","offsetHeight","Speck","props","state","renderer","eventListenDestructor","refreshView","propsReconcileTimeout","speckView","setProps","setCanvasRef","e","setContainerRef","container","loop","loadStructure","propsReconcile","propsReconcileSchedule","scrollZoom","SpeckRenderer","setState","speckInteractions","getRotation","setRotation","rotationObj","getTranslation","setTranslation","translationObj","getZoom","zoom","setZoom","zoomVal","prevProps","presetView","viewInternal","needsUpdate","speckPresetViews","view1Str","viewHasEqual","equals","clearTimeout","setTimeout","setSystem","setResolution","resolution","aoRes","reset","render","requestAnimationFrame","displayedElements","from","Set","map","speckElements","backgroundColor","padding","position","right","top","id","element","colorBlockStyle","colorToRgb","color","display","borderRadius","marginRight","border","alignItems","colors","newColors","lightenColor","join","colorChannel","MAX_COLOR_INDEX","loading_state","showLegend","ref","data-dash-is-loading","is_loading","undefined","colorLegend","Component","defaultProps","propTypes"],"mappings":"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","file":"async-speck.js","sourcesContent":["//\n// Main\n//\n\nfunction memoize (fn, options) {\n  var cache = options && options.cache\n    ? options.cache\n    : cacheDefault\n\n  var serializer = options && options.serializer\n    ? options.serializer\n    : serializerDefault\n\n  var strategy = options && options.strategy\n    ? options.strategy\n    : strategyDefault\n\n  return strategy(fn, {\n    cache: cache,\n    serializer: serializer\n  })\n}\n\n//\n// Strategy\n//\n\nfunction isPrimitive (value) {\n  return value == null || typeof value === 'number' || typeof value === 'boolean' // || typeof value === \"string\" 'unsafe' primitive for our needs\n}\n\nfunction monadic (fn, cache, serializer, arg) {\n  var cacheKey = isPrimitive(arg) ? arg : serializer(arg)\n\n  var computedValue = cache.get(cacheKey)\n  if (typeof computedValue === 'undefined') {\n    computedValue = fn.call(this, arg)\n    cache.set(cacheKey, computedValue)\n  }\n\n  return computedValue\n}\n\nfunction variadic (fn, cache, serializer) {\n  var args = Array.prototype.slice.call(arguments, 3)\n  var cacheKey = serializer(args)\n\n  var computedValue = cache.get(cacheKey)\n  if (typeof computedValue === 'undefined') {\n    computedValue = fn.apply(this, args)\n    cache.set(cacheKey, computedValue)\n  }\n\n  return computedValue\n}\n\nfunction assemble (fn, context, strategy, cache, serialize) {\n  return strategy.bind(\n    context,\n    fn,\n    cache,\n    serialize\n  )\n}\n\nfunction strategyDefault (fn, options) {\n  var strategy = fn.length === 1 ? monadic : variadic\n\n  return assemble(\n    fn,\n    this,\n    strategy,\n    options.cache.create(),\n    options.serializer\n  )\n}\n\nfunction strategyVariadic (fn, options) {\n  var strategy = variadic\n\n  return assemble(\n    fn,\n    this,\n    strategy,\n    options.cache.create(),\n    options.serializer\n  )\n}\n\nfunction strategyMonadic (fn, options) {\n  var strategy = monadic\n\n  return assemble(\n    fn,\n    this,\n    strategy,\n    options.cache.create(),\n    options.serializer\n  )\n}\n\n//\n// Serializer\n//\n\nfunction serializerDefault () {\n  return JSON.stringify(arguments)\n}\n\n//\n// Cache\n//\n\nfunction ObjectWithoutPrototypeCache () {\n  this.cache = Object.create(null)\n}\n\nObjectWithoutPrototypeCache.prototype.has = function (key) {\n  return (key in this.cache)\n}\n\nObjectWithoutPrototypeCache.prototype.get = function (key) {\n  return this.cache[key]\n}\n\nObjectWithoutPrototypeCache.prototype.set = function (key, value) {\n  this.cache[key] = value\n}\n\nvar cacheDefault = {\n  create: function create () {\n    return new ObjectWithoutPrototypeCache()\n  }\n}\n\n//\n// API\n//\n\nmodule.exports = memoize\nmodule.exports.strategies = {\n  variadic: strategyVariadic,\n  monadic: strategyMonadic\n}\n","import _has from './_has.js';\n\n// Based on https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\nfunction _objectAssign(target) {\n  if (target == null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  var output = Object(target);\n  var idx = 1;\n  var length = arguments.length;\n  while (idx < length) {\n    var source = arguments[idx];\n    if (source != null) {\n      for (var nextKey in source) {\n        if (_has(nextKey, source)) {\n          output[nextKey] = source[nextKey];\n        }\n      }\n    }\n    idx += 1;\n  }\n  return output;\n}\n\nexport default typeof Object.assign === 'function' ? Object.assign : _objectAssign;","import _objectAssign from './internal/_objectAssign.js';\nimport _curry1 from './internal/_curry1.js';\n\n/**\n * Merges a list of objects together into one object.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig [{k: v}] -> {k: v}\n * @param {Array} list An array of objects\n * @return {Object} A merged object.\n * @see R.reduce\n * @example\n *\n *      R.mergeAll([{foo:1},{bar:2},{baz:3}]); //=> {foo:1,bar:2,baz:3}\n *      R.mergeAll([{foo:1},{foo:2},{bar:2}]); //=> {foo:2,bar:2}\n * @symb R.mergeAll([{ x: 1 }, { y: 2 }, { z: 3 }]) = { x: 1, y: 2, z: 3 }\n */\nvar mergeAll = /*#__PURE__*/_curry1(function mergeAll(list) {\n  return _objectAssign.apply(null, [{}].concat(list));\n});\nexport default mergeAll;","import React, {Component} from 'react';\nimport {mergeAll, equals} from 'ramda';\nimport memoize from 'fast-memoize';\n\nimport {\n    speckRenderer as SpeckRenderer,\n    speckSystem,\n    speckView,\n    speckInteractions,\n    speckPresetViews,\n    speckElements,\n} from 'speck';\n\nimport {propTypes, defaultProps} from '../components/Speck.react';\n\n/**\n * Define private functions and variables used in the Speck component.\n **/\n\n// Time (in milliseconds) idle before props reconciliation with external\n// view is done\nconst PROPS_RECONCILE_DEBOUNCE_TIME = 500;\n\nconst MAX_COLOR_INDEX = 255;\n\nconst generateSystem = memoize(data => {\n    const system = speckSystem.new();\n\n    for (let i = 0; i < data.length; i++) {\n        // get the coordinate data\n        const a = data[i];\n        // add to the system\n        speckSystem.addAtom(system, a.symbol, a.x, a.y, a.z);\n    }\n\n    speckSystem.center(system);\n    speckSystem.calculateBonds(system);\n    return system;\n});\n\nconst viewClone = view =>\n    mergeAll([\n        view,\n        {\n            rotation: new Float32Array(view.rotation),\n            translation: mergeAll([view.translation]),\n        },\n    ]);\n\nconst viewAssign = (view1 = {}, view2 = {}) => Object.assign(view1, view2);\n\nconst viewHasEqual = function(view1) {\n    const view1Str = JSON.stringify(view1);\n    for (let i = 1; i < arguments.length; i++) {\n        if (view1Str === JSON.stringify(arguments[i])) {\n            return true;\n        }\n    }\n    return false;\n};\n\nfunction resizeCanvas(canvas) {\n    // Make the canvas visually fill the parent div of the plot\n    canvas.style.width = '100%';\n    canvas.style.height = '100%';\n    // Set the internal size to match the parent div\n    canvas.width = canvas.offsetWidth;\n    canvas.height = canvas.offsetHeight;\n}\n\nexport default class Speck extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            renderer: null,\n        };\n\n        this.eventListenDestructor = () => {\n            /* no-op */\n        };\n        this.refreshView = false;\n        this.propsReconcileTimeout = null;\n\n        this.view = viewAssign(speckView.new(), props.view);\n        this.props.setProps({\n            view: viewClone(this.view),\n        });\n\n        // setting refs in this way to allow for easier updating to\n        // react 16\n        this.setCanvasRef = e => {\n            this.canvas = e;\n        };\n        this.setContainerRef = e => {\n            this.container = e;\n        };\n\n        this.loop = this.loop.bind(this);\n        this.loadStructure = this.loadStructure.bind(this);\n        this.propsReconcile = this.propsReconcile.bind(this);\n        this.propsReconcileSchedule = this.propsReconcileSchedule.bind(this);\n    }\n\n    componentDidMount() {\n        const {scrollZoom} = this.props;\n        const {canvas, container} = this;\n        const resolution = 200;\n        const aoResolution = 300;\n        const renderer = new SpeckRenderer(canvas, resolution, aoResolution);\n\n        this.setState(\n            {\n                renderer,\n            },\n            this.loadStructure\n        );\n\n        // add event listeners\n        this.eventListenDestructor = speckInteractions({\n            scrollZoom,\n            container,\n\n            getRotation: () => this.view.rotation,\n            setRotation: rotationObj => {\n                this.view = viewAssign(this.view, {rotation: rotationObj});\n                this.propsReconcileSchedule();\n            },\n\n            getTranslation: () => this.view.translation,\n            setTranslation: translationObj => {\n                this.view = viewAssign(this.view, {\n                    translation: translationObj,\n                });\n                this.propsReconcileSchedule();\n            },\n\n            getZoom: () => this.view.zoom,\n            setZoom: zoomVal => {\n                this.view = viewAssign(this.view, {zoom: zoomVal});\n                this.propsReconcileSchedule();\n            },\n\n            refreshView: () => (this.refreshView = true),\n        });\n        resizeCanvas(canvas);\n        this.loop();\n    }\n\n    componentDidUpdate(prevProps) {\n        const {data, view, presetView, style} = this.props;\n        const {renderer} = this.state;\n\n        let viewInternal = this.view;\n        let needsUpdate = false;\n\n        // apply applicable preset parameters if preset has changed\n        if (prevProps.presetView !== presetView) {\n            viewInternal = viewAssign(\n                viewInternal,\n                speckPresetViews[presetView]\n            );\n            this.propsReconcileSchedule();\n            needsUpdate = true;\n        }\n\n        // apply the user-supplied view parameters\n        if (!viewHasEqual(view, prevProps.view, viewInternal)) {\n            viewInternal = viewAssign(viewInternal, view);\n            needsUpdate = true;\n        }\n\n        // check for changes to data\n        if (!equals(data, prevProps.data)) {\n            needsUpdate = true;\n        }\n\n        // check for changes to style\n        if (!equals(style, prevProps.style)) {\n            needsUpdate = true;\n        }\n\n        // perform update\n        if (needsUpdate) {\n            this.view = viewInternal;\n\n            if (renderer) {\n                this.loadStructure();\n            }\n        }\n    }\n\n    componentWillUnmount() {\n        // set this.state.renderer = null to ensure all refs to renderer are\n        // destroyed so garbage collector will clean up webgl contexts\n        // eslint-disable-next-line react/no-direct-mutation-state\n        this.state.renderer = null;\n        this.eventListenDestructor();\n        this.props.setProps({\n            view: this.view,\n        });\n    }\n\n    propsReconcile() {\n        if (!equals(this.view, this.props.view)) {\n            this.props.setProps({view: viewClone(this.view)});\n        }\n    }\n\n    // Schedule the function \"propsReconcile\" to run after the amount of time\n    // specified in PROPS_RECONCILE_DEBOUNCE_TIME. If a run has been scheduled\n    // previously, cancel it.\n    propsReconcileSchedule() {\n        clearTimeout(this.propsReconcileTimeout);\n        this.propsReconcileTimeout = setTimeout(\n            this.propsReconcile,\n            PROPS_RECONCILE_DEBOUNCE_TIME\n        );\n    }\n\n    loadStructure() {\n        const {data} = this.props;\n        const {canvas} = this;\n\n        // avoid trying to load an empty system\n        if (data.length === 0) {\n            return;\n        }\n\n        const {renderer} = this.state;\n        const {view} = this;\n        const system = generateSystem(data);\n\n        renderer.setSystem(system, view);\n\n        // update the resolution\n        renderer.setResolution(view.resolution, view.aoRes);\n\n        this.refreshView = true;\n\n        // resize canvas to fit container\n        resizeCanvas(canvas);\n    }\n\n    loop() {\n        if (this.state.renderer && this.view) {\n            if (this.refreshView) {\n                this.state.renderer.reset();\n                this.refreshView = false;\n            }\n            this.state.renderer.render(this.view);\n        }\n        requestAnimationFrame(this.loop);\n    }\n\n    colorLegend() {\n        const displayedSymbols = Array.from(\n            new Set(this.props.data.map(({symbol}) => symbol))\n        );\n        const displayedElements = displayedSymbols.map(\n            symbol => speckElements[symbol]\n        );\n\n        const containerStyle = {\n            backgroundColor: 'white',\n            width: '60px',\n            height: 'fit-content',\n            padding: '10px',\n            position: 'absolute',\n            right: '-80px',\n            top: 0,\n        };\n\n        return (\n            <div style={containerStyle} id=\"speck-color-legend\">\n                {displayedElements.map(element => {\n                    const colorBlockStyle = {\n                        backgroundColor: this.colorToRgb(element.color),\n                        width: '16px',\n                        height: '16px',\n                        display: 'inline-block',\n                        borderRadius: '50%',\n                        marginRight: '20px',\n                        border: '0.25px solid black',\n                    };\n\n                    const colorContainerStyle = {\n                        display: 'flex',\n                        alignItems: 'center',\n                    };\n\n                    return (\n                        <p style={colorContainerStyle} key={element.symbol}>\n                            <span style={colorBlockStyle} />\n                            <span>{element.symbol}</span>\n                        </p>\n                    );\n                })}\n            </div>\n        );\n    }\n\n    colorToRgb(colors) {\n        const newColors = colors\n            .map(color => color * MAX_COLOR_INDEX)\n            .map(color => this.lightenColor(color))\n            .join(', ');\n\n        return `rgb(${newColors})`;\n    }\n\n    // In WebGL we mix original colors with white to get more lighter colors\n    lightenColor(colorChannel) {\n        return colorChannel * 0.5 + MAX_COLOR_INDEX * 0.5;\n    }\n\n    render() {\n        const {id, loading_state, showLegend, style} = this.props;\n\n        return (\n            <div\n                id={id}\n                ref={this.setContainerRef}\n                style={style}\n                data-dash-is-loading={\n                    (loading_state && loading_state.is_loading) || undefined\n                }\n            >\n                <canvas ref={this.setCanvasRef} />\n                {showLegend && this.colorLegend()}\n            </div>\n        );\n    }\n}\n\nSpeck.defaultProps = defaultProps;\nSpeck.propTypes = propTypes;\n"],"sourceRoot":""}